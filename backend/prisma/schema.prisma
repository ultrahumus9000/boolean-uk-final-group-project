// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOWBASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialActions"]
}

model User {
  id           Int           @id @default(autoincrement())
  username     String        @unique
  password     String
  firstName    String
  lastName     String
  email        String        @unique
  basicRole    Role?         @default(Guest)
  advancedRole Role?         @default(Host)
  avatar       String
  guest        GuestProfile?
  host         HostProfile?
}

enum Role {
  Guest
  Host
}

model GuestProfile {
  id       Int        @id @default(autoincrement())
  user     User       @relation(fields: [userId], references: [id])
  userId   Int
  bio      String?
  wishlist WishList[]
  review   Review[]
  Booking  Booking[]
}

model HostProfile {
  id     Int     @id @default(autoincrement())
  user   User    @relation(fields: [userId], references: [id])
  userId Int
  bio    String?

  house House[]
}

model WishList {
  id      Int          @id @default(autoincrement())
  guest   GuestProfile @relation(fields: [guestId], references: [id])
  guestId Int
  house   House        @relation(fields: [houseId], references: [id])
  houseId Int
}

model House {
  id       Int         @id @default(autoincrement())
  name     String
  bedrooms Int
  guests   Int
  facility String[]
  city     String
  wishList WishList[]
  host     HostProfile @relation(fields: [hostId], references: [id])
  hostId   Int
  price    Int
  review   Review[]
  pictures Picture[]
}

model Review {
  id      Int          @id @default(autoincrement())
  content String
  house   House        @relation(fields: [houseId], references: [id])
  houseId Int
  guest   GuestProfile @relation(fields: [guestId], references: [id])
  guestId Int
}

model Booking {
  id          Int           @id @default(autoincrement())
  total       Int           @default(0)
  guest       GuestProfile  @relation(fields: [guestId], references: [id])
  guestId     Int
  reservation Reservation[]
}

model Reservation {
  id        Int     @id @default(autoincrement())
  booking   Booking @relation(fields: [bookingId], references: [id])
  bookingId Int
}

model Picture {
  id      Int   @id @default(autoincrement())
  house   House @relation(fields: [houseId], references: [id])
  houseId Int
  // content String
}
