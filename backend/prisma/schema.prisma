// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOWBASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialActions"]
}

model User {
  id           Int           @id @default(autoincrement())
  username     String        @unique
  password     String
  firstName    String
  lastName     String
  email        String        @unique
  guestRole    String?       @default("guest")
  hostRole     String?       @default("host")
  avatar       String
  guestProfile GuestProfile?
  hostProfile  HostProfile?
}

model GuestProfile {
  id        Int        @id @default(autoincrement())
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  bio       String?
  wishlists WishList[]
  reviews   Review[]
  bookings  Booking[]
}

model HostProfile {
  id     Int     @id @default(autoincrement())
  user   User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
  bio    String?
  houses House[]
}

model WishList {
  id           Int          @id @default(autoincrement())
  guestProfile GuestProfile @relation(fields: [guestId], references: [id], onDelete: Cascade)
  guestId      Int
  house        House        @relation(fields: [houseId], references: [id], onDelete: Cascade)
  houseId      Int
}

model House {
  id          Int         @id @default(autoincrement())
  name        String
  bedrooms    Int
  maxGuests   Int
  facility    String[]
  city        String
  wishList    WishList[]
  hostProfile HostProfile @relation(fields: [hostId], references: [id], onDelete: Cascade)
  hostId      Int
  price       Int
  reviews     Review[]
  pictures    Picture[]
}

model Review {
  id           Int          @id @default(autoincrement())
  content      String
  house        House        @relation(fields: [houseId], references: [id], onDelete: Cascade)
  houseId      Int
  guestProfile GuestProfile @relation(fields: [guestId], references: [id], onDelete: Cascade)
  guestId      Int
}

model Booking {
  id           Int          @id @default(autoincrement())
  total        Int          @default(0)
  guestProfile GuestProfile @relation(fields: [guestId], references: [id], onDelete: Cascade)
  guestId      Int
  start        DateTime     @db.Date
  end          DateTime     @db.Date
}

model Picture {
  id      Int    @id @default(autoincrement())
  house   House  @relation(fields: [houseId], references: [id], onDelete: Cascade)
  houseId Int
  src     String
  alt     String
}
